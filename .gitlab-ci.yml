image: php:7.2

# Select what we should cache between builds
cache:
  paths:
  - vendor/

before_script:
- apt-get update -yqq
- apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev zip unzip subversion mysql-client default-libmysqlclient-dev --fix-missing
# Install PHP extensions
- pecl install mcrypt-1.0.1
- docker-php-ext-enable mcrypt
- docker-php-ext-install mbstring curl json intl gd xml zip bz2 opcache pdo_mysql mysqli
  # Set up WordPress tests
- bash bin/install-wp-tests.sh wordpress_tests root mysql mysql latest true

# Install & enable Xdebug for code coverage reports
- pecl install xdebug
- docker-php-ext-enable xdebug
# Install and run Composer
- curl -sS https://getcomposer.org/installer | php
- php composer.phar install
# Install PHPCS and WPCS
- composer global require "squizlabs/php_codesniffer=*"
- composer global require "wp-coding-standards/wpcs"
- phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs

# Bring in any services we need http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# See http://docs.gitlab.com/ce/ci/services/README.html for examples.
services:
  - mysql:5.7

# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE: wordpress_tests
  MYSQL_ROOT_PASSWORD: mysql

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
test:
  services:
    - mysql:5.6
  script:
    - phpcs
    - vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never
